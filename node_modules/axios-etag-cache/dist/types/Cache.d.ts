export declare abstract class BaseCache {
    private cache;
    get(key: string): CacheValue | undefined;
    set(key: string, value: CacheValue): void;
    flushAll(): void;
}
export declare class DefaultCache extends BaseCache {
}
export interface CacheValue {
    etag: string;
    value: any;
}
export declare class Cache {
    static instance: Cache;
    cache: BaseCache;
    static getInstance(): Cache;
    static get(uuid: string): CacheValue | undefined;
    static set(uuid: string, etag: string, value: any): void;
    static reset(): void;
    constructor(cache: BaseCache);
}
